{"remainingRequest":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\duytin\\Desktop\\MISA.HCSN\\src\\views\\dictionary\\DetailDevice.vue?vue&type=template&id=46030dd6&scoped=true&","dependencies":[{"path":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\src\\views\\dictionary\\DetailDevice.vue","mtime":1623208232353},{"path":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\duytin\\Desktop\\MISA.HCSN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}